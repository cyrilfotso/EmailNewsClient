/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emailnewsclient;

import java.awt.BorderLayout;
import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author Cyril
 */
public class loginForm extends javax.swing.JFrame {

    /**
     * Creates new form loginForm
     */
    private final String USER_AGENT = "Mozilla/5.0";
    // param to store user 
    private String USER_NAME;
    private String USER_ID;
    private String USER_TYPE;
    private boolean READ_ACCES;
    private boolean WRITE_ACCES;
    private final String TEMPLATE_MSG="<html>&rArr;&nbsp;<strong>userFrom</strong> (dateFrom)<br/>&nbsp;&nbsp;&nbsp;Subject&nbsp;<hr/></html>";
    private String[] LISTE_MAILS_DISPLAY;
    private String[] MAILS_IDS;
    private String[] MAILS_SUBJECTS;
    private String[] MAILS_SENDERS;
    private String[] MAILS_RECEIVERS;
    private String[] MAILS_DATES;
    private String[] MAILS_BODYS;
    public String MAIL_TYPE="MAIL"; // will be used to switch between mail and news
    HttpURLConnectionRest httpRest = new HttpURLConnectionRest();

    public loginForm() {
        initComponents();
        OutoutCreate.setText("");
        outputLogin.setText("");
        conexionStatut.setText("");
        this.setResizable(false);
        this.pack();
        this.setLocationRelativeTo(null);
        setConteneur(loginPanel);
        this.setVisible(true);
        idCurrentMessage.setVisible(false);        
    }

    public void setConteneur(JPanel newPanel) {
        this.getContentPane().removeAll();
        this.setContentPane(newPanel);
        this.revalidate();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        outputLogin = new javax.swing.JLabel();
        accountBtn = new javax.swing.JButton();
        conexionStatut = new javax.swing.JLabel();
        accountPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        newUserName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        createUser = new javax.swing.JButton();
        OutoutCreate = new javax.swing.JLabel();
        newBoxName = new javax.swing.JTextField();
        MessagePanel = new javax.swing.JPanel();
        BoxManager = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        displayer = new javax.swing.JPanel();
        Menu = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        msgReader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        msgSender = new javax.swing.JLabel();
        msgSendDate = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        msgBody = new javax.swing.JTextArea();
        msgDestinator = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        msgSubject = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        deleteMessage = new javax.swing.JLabel();
        idCurrentMessage = new javax.swing.JLabel();
        msgWriter = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        NewMsgBody = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        sendNewMessage = new javax.swing.JLabel();
        newMsgDestinator = new javax.swing.JTextField();
        newMsgSubject = new javax.swing.JTextField();

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setText("Login");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel5.setText("User Name :");

        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });

        loginButton.setText("Submit");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        outputLogin.setText("output");

        accountBtn.setText("New User");
        accountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountBtnActionPerformed(evt);
            }
        });

        conexionStatut.setText("c");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(outputLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(conexionStatut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginPanelLayout.createSequentialGroup()
                            .addComponent(loginButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                            .addComponent(accountBtn))
                        .addComponent(userName, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap())
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(outputLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(conexionStatut)
                .addGap(30, 30, 30)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(accountBtn))
                .addGap(0, 30, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel7.setText("Create User");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel8.setText("User Name :");

        newUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserNameActionPerformed(evt);
            }
        });

        jLabel9.setText("Box Name :");

        createUser.setText("Submit");
        createUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserActionPerformed(evt);
            }
        });

        OutoutCreate.setText("output");

        javax.swing.GroupLayout accountPanelLayout = new javax.swing.GroupLayout(accountPanel);
        accountPanel.setLayout(accountPanelLayout);
        accountPanelLayout.setHorizontalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPanelLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPanelLayout.createSequentialGroup()
                            .addComponent(createUser)
                            .addGap(171, 171, 171))
                        .addGroup(accountPanelLayout.createSequentialGroup()
                            .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)
                                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(newBoxName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(newUserName, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGap(100, 100, 100)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPanelLayout.createSequentialGroup()
                        .addComponent(OutoutCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        accountPanelLayout.setVerticalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(OutoutCreate)
                .addContainerGap())
        );

        javax.swing.GroupLayout MessagePanelLayout = new javax.swing.GroupLayout(MessagePanel);
        MessagePanel.setLayout(MessagePanelLayout);
        MessagePanelLayout.setHorizontalGroup(
            MessagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
        );
        MessagePanelLayout.setVerticalGroup(
            MessagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jList1FocusGained(evt);
            }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        displayer.setBorder(javax.swing.BorderFactory.createTitledBorder("View"));
        displayer.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout BoxManagerLayout = new javax.swing.GroupLayout(BoxManager);
        BoxManager.setLayout(BoxManagerLayout);
        BoxManagerLayout.setHorizontalGroup(
            BoxManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BoxManagerLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayer, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                .addContainerGap())
        );
        BoxManagerLayout.setVerticalGroup(
            BoxManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BoxManagerLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BoxManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                    .addGroup(BoxManagerLayout.createSequentialGroup()
                        .addComponent(displayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jMenu3.setText("Mails Manager");

        jMenuItem1.setText("Mails List");
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("New Mail");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        Menu.add(jMenu3);

        jMenu4.setText("News Manager");

        jMenuItem3.setText("News List");
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("New News");
        jMenu4.add(jMenuItem4);

        Menu.add(jMenu4);

        jMenu1.setText("Users");

        jMenuItem5.setText("Users List");
        jMenu1.add(jMenuItem5);

        Menu.add(jMenu1);

        jLabel1.setText("FROM : ");

        jLabel2.setText("DATE :");

        msgSender.setText("jLabel3");

        msgSendDate.setText("jLabel6");

        msgBody.setEditable(false);
        msgBody.setColumns(20);
        msgBody.setRows(5);
        jScrollPane2.setViewportView(msgBody);

        msgDestinator.setText("jLabel6");

        jLabel3.setText("TO :");

        msgSubject.setText("jLabel6");

        jLabel6.setText("SUBJECT : ");

        deleteMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailnewsclient/delete_icon.gif"))); // NOI18N
        deleteMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMessageMouseClicked(evt);
            }
        });

        idCurrentMessage.setText("jLabel10");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(idCurrentMessage)
                .addGap(18, 18, 18)
                .addComponent(deleteMessage)
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteMessage)
                    .addComponent(idCurrentMessage))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout msgReaderLayout = new javax.swing.GroupLayout(msgReader);
        msgReader.setLayout(msgReaderLayout);
        msgReaderLayout.setHorizontalGroup(
            msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgReaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(msgReaderLayout.createSequentialGroup()
                        .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, msgReaderLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(4, 4, 4)
                                .addComponent(msgSubject, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, msgReaderLayout.createSequentialGroup()
                                .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(msgSender, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(msgSendDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(msgDestinator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        msgReaderLayout.setVerticalGroup(
            msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgReaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(msgReaderLayout.createSequentialGroup()
                        .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(msgSender, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(msgDestinator, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(msgSendDate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(msgReaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(msgSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        NewMsgBody.setColumns(20);
        NewMsgBody.setRows(5);
        jScrollPane3.setViewportView(NewMsgBody);

        jLabel12.setText("TO :");

        jLabel13.setText("SUBJECT : ");

        sendNewMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailnewsclient/capture_icon.gif"))); // NOI18N
        sendNewMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendNewMessageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(sendNewMessage)
                .addGap(33, 33, 33))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(sendNewMessage)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout msgWriterLayout = new javax.swing.GroupLayout(msgWriter);
        msgWriter.setLayout(msgWriterLayout);
        msgWriterLayout.setHorizontalGroup(
            msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgWriterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(msgWriterLayout.createSequentialGroup()
                        .addGroup(msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newMsgDestinator, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newMsgSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        msgWriterLayout.setVerticalGroup(
            msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgWriterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(msgWriterLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newMsgDestinator, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(msgWriterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(newMsgSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("login form");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 295, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    private void newUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newUserNameActionPerformed

    private void accountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountBtnActionPerformed
        // TODO add your handling code here:
        setConteneur(accountPanel);
//          this.setContentPane(accountPanel);
    }//GEN-LAST:event_accountBtnActionPerformed

    private void createUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserActionPerformed
        // TODO add your handling code here:
        String UserName = newUserName.getText();
        String boxName = newBoxName.getText();
        if (!UserName.equals("") && !boxName.equals("") && boxName.contains("@")) {
            try {
                Object[] param = new Object[2];
                Object[] param_values = new Object[2];
                param[0] = "userName";
                param[1] = "boxName";
                param_values[0] = UserName;
                param_values[1] = boxName;
                String path = "/userManager/addUser";
                OutoutCreate.setText(httpRest.getSingleStringMessage(httpRest.sendPost(path, param, param_values)));
            } catch (Exception ex) {
                Logger.getLogger(EmailNewsClient.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            OutoutCreate.setForeground(Color.red);
            OutoutCreate.setText("Entrez un UserName et une BoxName contenant @");
        }
    }//GEN-LAST:event_createUserActionPerformed

    
    
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        String UserName = this.userName.getText();
        boolean isUser = false;
        if (!UserName.equals("")) {
            try {
                String path = "/userManager/isUser/" + UserName;
                String connextionResult = httpRest.getSingleStringMessage(httpRest.sendGet(path, null, null));
                System.out.println(httpRest.sendGet(path, null, null));
                isUser = Boolean.valueOf(connextionResult);
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(loginForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SAXException ex) {
                Logger.getLogger(loginForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(loginForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(loginForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if (isUser) {
                conexionStatut.setText("User Bien Connecté");
                setUserConfig(UserName);
                getUserMails(USER_NAME);
                this.setSize(827, 476);
                menuPanel.setSize(827,30);
                menuPanel.setLayout(new BorderLayout());
                menuPanel.add(Menu, BorderLayout.NORTH);
                String categories[] = {"Hello World"};
                if (LISTE_MAILS_DISPLAY.length>0) {
                    jList1= new JList(LISTE_MAILS_DISPLAY);
                } else {
                    jList1= new JList(categories);
                }                
                jList1.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);
                jScrollPane1.setViewportView(jList1);
                setConteneur(BoxManager);     
                jList1.addListSelectionListener(listSelectionListener);
                this.setTitle("BoxManager User: "+USER_NAME);
                this.pack();
                this.setLocationRelativeTo(null);                
            } else {
                conexionStatut.setText("Invalid User");
            }
        } else {
            outputLogin.setText("Entrez un UserName Svp");
        }
        
    }//GEN-LAST:event_loginButtonActionPerformed
    
    ListSelectionListener listSelectionListener = new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent listSelectionEvent) {
        boolean adjust = listSelectionEvent.getValueIsAdjusting();
        if (!adjust) {
          JList list = (JList) listSelectionEvent.getSource();
          int selection = list.getSelectedIndex();
          Object selectionValue = list.getSelectedValue();
          System.out.println(selection + " : " + selectionValue + " ");
          
          msgSender.setText(MAILS_SENDERS[selection]);
          msgDestinator.setText(MAILS_RECEIVERS[selection]);
          msgSendDate.setText(MAILS_DATES[selection]);
          msgBody.setText(MAILS_BODYS[selection]);
          msgSubject.setText(MAILS_SUBJECTS[selection]);
          idCurrentMessage.setText(MAILS_IDS[selection]);
          displayer.removeAll();
          displayer.add(msgReader);
          displayer.revalidate();
          displayer.repaint();
        }
      }
    };
    
    
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        System.out.println("element selectionné : "+jList1.getSelectedIndex()+" : "+jList1.getSelectedValue());
    }//GEN-LAST:event_jList1ValueChanged

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        System.out.println("element selectionné : "+jList1.getSelectedIndex()+" : "+jList1.getSelectedValue());
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jList1FocusGained
        // TODO add your handling code here:
        System.out.println("element selectionné : "+jList1.getSelectedIndex()+" : "+jList1.getSelectedValue());
    }//GEN-LAST:event_jList1FocusGained

    private void deleteMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMessageMouseClicked
        // TODO add your handling code here:
        System.out.println("suprimer le message : "+idCurrentMessage.getText());
    }//GEN-LAST:event_deleteMessageMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        displayer.removeAll();
        displayer.add(msgWriter);
        displayer.revalidate();
        displayer.repaint();
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void sendNewMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendNewMessageMouseClicked
        // TODO add your handling code here:
        System.out.println("Envoie d'un nouveau message");
        String newuserTO=newMsgDestinator.getText();
        String newsubject=newMsgSubject.getText();
        String newBody=NewMsgBody.getText();
        if ( !newuserTO.equals("") && !newsubject.equals("") && !newBody.equals("")) {            
            
        } else {
            
        }
        
    }//GEN-LAST:event_sendNewMessageMouseClicked
    
    
    
    
    public void setUserConfig(String UserName){
        try {
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            String path = httpRest.getBaseUrl()+"/userManager/getUser/" + UserName;
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(path);
            doc.getDocumentElement().normalize();
            NodeList nList = doc.getElementsByTagName("utilisateur");
            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);
		System.out.println("\nCurrent Element :" + nNode.getNodeName());
		if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;
                    USER_ID = eElement.getElementsByTagName("id").item(0).getTextContent();
                    USER_NAME = eElement.getElementsByTagName("userName").item(0).getTextContent();
                    USER_TYPE = eElement.getElementsByTagName("userType").item(0).getTextContent();
                    READ_ACCES = Boolean.valueOf(eElement.getElementsByTagName("ReadAccess").item(0).getTextContent());
                    WRITE_ACCES = Boolean.valueOf(eElement.getElementsByTagName("WriteAccess").item(0).getTextContent());
			
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    public void getUserMails(String UserName){
        try {
            
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            String path = httpRest.getBaseUrl()+"/MailBoxManager/getMailUser/All/" + UserName;
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(path);
            doc.getDocumentElement().normalize();
            NodeList nList = doc.getElementsByTagName("message");
            //initialisation of our set of array containing user mails data
            LISTE_MAILS_DISPLAY = new String[nList.getLength()];
            MAILS_IDS= new String[nList.getLength()];
            MAILS_SUBJECTS= new String[nList.getLength()];
            MAILS_SENDERS= new String[nList.getLength()];
            MAILS_RECEIVERS= new String[nList.getLength()];
            MAILS_DATES= new String[nList.getLength()];
            MAILS_BODYS= new String[nList.getLength()];
            
            String mail_display,statut,subject,userFrom,sendingDate,id_mail,body,receiverName ;
            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);
		System.out.println("\nCurrent Element :" + nNode.getNodeName());
		if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;
                    id_mail=eElement.getElementsByTagName("id").item(0).getTextContent();
                    statut=eElement.getElementsByTagName("statut").item(0).getTextContent();
                    userFrom=eElement.getElementsByTagName("senderName").item(0).getTextContent();
                    subject=eElement.getElementsByTagName("subject").item(0).getTextContent();
                    sendingDate=eElement.getElementsByTagName("sendingDate").item(0).getTextContent();
                    receiverName=eElement.getElementsByTagName("receiverName").item(0).getTextContent();
                    body=eElement.getElementsByTagName("body").item(0).getTextContent();
                    mail_display="";
                    if (statut.equals("UNREAD")) {
                        mail_display=TEMPLATE_MSG.replace("userFrom", userFrom).replace("Subject", subject).replace("dateFrom",sendingDate.substring(0,13)+"h");
                    } else {
                        mail_display=TEMPLATE_MSG.replace("<strong>","").replace("</strong>","").replace("userFrom", userFrom).replace("Subject", subject).replace("dateFrom",sendingDate.substring(0,13)+"h");
                    }
                    
                    LISTE_MAILS_DISPLAY[temp]=mail_display;
                    MAILS_IDS[temp]=id_mail;
                    MAILS_SUBJECTS[temp]=subject;
                    MAILS_SENDERS[temp]=userFrom;
                    MAILS_RECEIVERS[temp]=receiverName;
                    MAILS_DATES[temp]=sendingDate;
                    MAILS_BODYS[temp]=body;
                    
                    System.out.println("Msg Id : "+eElement.getElementsByTagName("id").item(0).getTextContent()); 
                    System.out.println("Msg messageType : "+eElement.getElementsByTagName("messageType").item(0).getTextContent()); 
                    System.out.println("Msg senderName : "+eElement.getElementsByTagName("senderName").item(0).getTextContent()); 
                    System.out.println("Msg receiverName : "+eElement.getElementsByTagName("receiverName").item(0).getTextContent()); 
                    System.out.println("Msg sendingDate : "+eElement.getElementsByTagName("sendingDate").item(0).getTextContent()); 
                    System.out.println("Msg statut : "+eElement.getElementsByTagName("statut").item(0).getTextContent()); 
                    System.out.println("Msg subject : "+eElement.getElementsByTagName("subject").item(0).getTextContent()); 
                    System.out.println("Msg body : "+eElement.getElementsByTagName("body").item(0).getTextContent());
                    System.out.println("---------------------------------------------");
                    
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BoxManager;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JPanel MessagePanel;
    private javax.swing.JTextArea NewMsgBody;
    private javax.swing.JLabel OutoutCreate;
    private javax.swing.JButton accountBtn;
    private javax.swing.JPanel accountPanel;
    private javax.swing.JLabel conexionStatut;
    private javax.swing.JButton createUser;
    private javax.swing.JLabel deleteMessage;
    private javax.swing.JPanel displayer;
    private javax.swing.JLabel idCurrentMessage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JTextArea msgBody;
    private javax.swing.JLabel msgDestinator;
    private javax.swing.JPanel msgReader;
    private javax.swing.JLabel msgSendDate;
    private javax.swing.JLabel msgSender;
    private javax.swing.JLabel msgSubject;
    private javax.swing.JPanel msgWriter;
    private javax.swing.JTextField newBoxName;
    private javax.swing.JTextField newMsgDestinator;
    private javax.swing.JTextField newMsgSubject;
    private javax.swing.JTextField newUserName;
    private javax.swing.JLabel outputLogin;
    private javax.swing.JLabel sendNewMessage;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
